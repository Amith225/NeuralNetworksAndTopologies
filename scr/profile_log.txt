# float32 path
"C:\Users\Vidya\PycharmProjects\MACHIENE LEARNING\venv\Scripts\python.exe" "C:/Users/Vidya/PycharmProjects/MACHIENE LEARNING/AI_ADV.py"
epoch: 0  cost: 0.510469611734469 time: 536.7303819656372
         3494555 function calls in 540.579 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(concatenate)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(prod)
        1    0.000    0.000  540.579  540.579 <string>:1(<module>)
        1    0.005    0.005  540.579  540.579 AI_ADV.py:15(foo)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:102(normal)
        1    0.000    0.000    0.023    0.023 NeuralNetworks_ADV.py:104(initializer)
        1    0.002    0.002    0.022    0.022 NeuralNetworks_ADV.py:105(<listcomp>)
        1    0.000    0.000    0.001    0.001 NeuralNetworks_ADV.py:108(<listcomp>)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:132(mean_square)
   124799    1.358    0.000   45.059    0.000 NeuralNetworks_ADV.py:134(loss_function)
   374397   10.215    0.000   10.215    0.000 NeuralNetworks_ADV.py:148(activation)
   374397    3.246    0.000    3.246    0.000 NeuralNetworks_ADV.py:152(activated_derivative)
        1    0.000    0.000    0.023    0.023 NeuralNetworks_ADV.py:194(moment)
   124799  304.106    0.002  304.106    0.002 NeuralNetworks_ADV.py:198(optimizer)
   124799   30.707    0.000   40.923    0.000 NeuralNetworks_ADV.py:34(forward_pass)
   124799    2.017    0.000  536.187    0.004 NeuralNetworks_ADV.py:43(back_propagation)
   374397  181.177    0.000  185.005    0.000 NeuralNetworks_ADV.py:53(find_delta)
        1    0.600    0.600  540.551  540.551 NeuralNetworks_ADV.py:61(train)
        1    1.029    1.029    3.282    3.282 NeuralNetworks_ADV.py:64(<listcomp>)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:91(<listcomp>)
   124799    0.119    0.000    2.465    0.000 _methods.py:45(_sum)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        6    0.000    0.000    0.000    0.000 abc.py:137(__instancecheck__)
        6    0.000    0.000    0.000    0.000 contextlib.py:58(_recreate_cm)
        6    0.000    0.000    0.001    0.000 contextlib.py:71(inner)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2876(_prod_dispatcher)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2881(prod)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        6    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        6    0.000    0.000    0.000    0.000 random.py:681(getrandbits)
        6    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000  540.579  540.579 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
   249601    0.082    0.000    0.082    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        6    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        6    0.000    0.000    0.000    0.000 {built-in method nt.urandom}
   249603    2.225    0.000    2.225    0.000 {built-in method numpy.array}
        7    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
       24    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       12    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        2    0.000    0.000    0.000    0.000 {built-in method time.time}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.016    0.016    0.016    0.016 {method 'choice' of 'numpy.random.mtrand.RandomState' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
   124800    2.345    0.000    2.345    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   249600    0.411    0.000    0.411    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        6    0.020    0.003    0.020    0.003 {method 'standard_normal' of 'numpy.random._generator.Generator' objects}
   124799    0.313    0.000    2.778    0.000 {method 'sum' of 'numpy.ndarray' objects}
   748794    0.582    0.000    0.582    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        6    0.001    0.000    0.002    0.000 {numpy.random._generator.default_rng}


>>>



# einsum patch
"C:\Users\Vidya\PycharmProjects\MACHIENE LEARNING\venv\Scripts\python.exe" "C:/Users/Vidya/PycharmProjects/MACHIENE LEARNING/AI_ADV.py"
epoch: 0  cost: 0.5066487604299887 time: 476.34387588500977
         11980887 function calls (11481691 primitive calls) in 479.024 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(concatenate)
   249598    0.355    0.000    1.381    0.000 <__array_function__ internals>:2(copyto)
   748794    1.068    0.000   87.234    0.000 <__array_function__ internals>:2(einsum)
   249598    0.440    0.000    1.858    0.000 <__array_function__ internals>:2(empty_like)
   249598    0.422    0.000    4.930    0.000 <__array_function__ internals>:2(ones_like)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(prod)
        1    0.000    0.000  479.024  479.024 <string>:1(<module>)
        1    0.005    0.005  479.024  479.024 AI_ADV.py:16(foo)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:103(normal)
        1    0.000    0.000    0.024    0.024 NeuralNetworks_ADV.py:105(initializer)
        1    0.001    0.001    0.023    0.023 NeuralNetworks_ADV.py:106(<listcomp>)
        1    0.000    0.000    0.001    0.001 NeuralNetworks_ADV.py:109(<listcomp>)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:133(mean_square)
   124799    0.878    0.000   32.676    0.000 NeuralNetworks_ADV.py:135(loss_function)
   124799    2.572    0.000    2.572    0.000 NeuralNetworks_ADV.py:149(activation)
   124799    0.845    0.000    0.845    0.000 NeuralNetworks_ADV.py:153(activated_derivative)
   249598    2.661    0.000    2.661    0.000 NeuralNetworks_ADV.py:161(activation)
   249598    2.887    0.000    7.816    0.000 NeuralNetworks_ADV.py:165(activated_derivative)
        1    0.000    0.000    0.024    0.024 NeuralNetworks_ADV.py:195(moment)
   124799  316.408    0.003  316.408    0.003 NeuralNetworks_ADV.py:200(optimizer)
   124799    4.875    0.000   30.235    0.000 NeuralNetworks_ADV.py:35(forward_pass)
   124799    1.948    0.000  475.761    0.004 NeuralNetworks_ADV.py:44(back_propagation)
   374397   50.150    0.000  124.730    0.000 NeuralNetworks_ADV.py:54(find_delta)
        1    0.614    0.614  478.995  478.995 NeuralNetworks_ADV.py:62(train)
        1    0.705    0.705    2.339    2.339 NeuralNetworks_ADV.py:65(<listcomp>)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:92(<listcomp>)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        6    0.000    0.000    0.000    0.000 abc.py:137(__instancecheck__)
        6    0.000    0.000    0.000    0.000 contextlib.py:58(_recreate_cm)
        6    0.000    0.000    0.001    0.000 contextlib.py:71(inner)
  3743970    0.826    0.000    0.826    0.000 einsumfunc.py:989(_einsum_dispatcher)
   748794    0.681    0.000   82.575    0.000 einsumfunc.py:997(einsum)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2876(_prod_dispatcher)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2881(prod)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
   249598    0.073    0.000    0.073    0.000 multiarray.py:1043(copyto)
        6    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
   249598    0.064    0.000    0.064    0.000 multiarray.py:75(empty_like)
   249598    0.076    0.000    0.076    0.000 numeric.py:197(_ones_like_dispatcher)
   249598    0.898    0.000    4.138    0.000 numeric.py:201(ones_like)
        6    0.000    0.000    0.000    0.000 random.py:681(getrandbits)
        6    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000  479.024  479.024 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
   249601    0.056    0.000    0.056    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        6    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        6    0.000    0.000    0.000    0.000 {built-in method nt.urandom}
   249603    1.553    0.000    1.553    0.000 {built-in method numpy.array}
   748794   81.894    0.000   81.894    0.000 {built-in method numpy.core._multiarray_umath.c_einsum}
1497595/998399    5.366    0.000   90.598    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
       24    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       12    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        2    0.000    0.000    0.000    0.000 {built-in method time.time}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.010    0.010    0.010    0.010 {method 'choice' of 'numpy.random.mtrand.RandomState' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   249600    0.296    0.000    0.296    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        6    0.021    0.003    0.021    0.003 {method 'standard_normal' of 'numpy.random._generator.Generator' objects}
   374397    0.373    0.000    0.373    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        6    0.001    0.000    0.002    0.000 {numpy.random._generator.default_rng}


>>>



# minor bugs fix, boost speed patch
"C:\Users\Vidya\PycharmProjects\MACHIENE LEARNING\venv\Scripts\python.exe" "C:/Users/Vidya/PycharmProjects/MACHIENE LEARNING/AI_ADV.py"
epoch: 0  cost: 0.5113532457721113 time: 444.57478046417236
         13728086 function calls in 446.359 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(concatenate)
  1247990    1.790    0.000  104.330    0.000 <__array_function__ internals>:2(einsum)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(prod)
        1    0.000    0.000  446.359  446.359 <string>:1(<module>)
        1    0.005    0.005  446.359  446.359 AI_ADV.py:16(foo)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:107(normal)
        1    0.000    0.000    0.012    0.012 NeuralNetworks_ADV.py:109(initializer)
        1    0.001    0.001    0.012    0.012 NeuralNetworks_ADV.py:110(<listcomp>)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:113(<listcomp>)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:137(mean_square)
   124799    0.795    0.000   29.807    0.000 NeuralNetworks_ADV.py:139(loss_function)
   124799    2.487    0.000    2.487    0.000 NeuralNetworks_ADV.py:151(activation)
   124799    0.868    0.000    0.868    0.000 NeuralNetworks_ADV.py:154(activated_derivative)
   249598    2.357    0.000    2.357    0.000 NeuralNetworks_ADV.py:161(activation)
   249598    3.883    0.000    3.883    0.000 NeuralNetworks_ADV.py:164(activated_derivative)
        1    0.000    0.000    0.012    0.012 NeuralNetworks_ADV.py:189(moment)
   124799  307.498    0.002  307.498    0.002 NeuralNetworks_ADV.py:194(optimizer)
   124799    3.239    0.000   27.577    0.000 NeuralNetworks_ADV.py:37(forward_pass)
   124799    1.330    0.000  444.041    0.004 NeuralNetworks_ADV.py:47(back_propagation)
   124799    0.290    0.000  100.779    0.001 NeuralNetworks_ADV.py:52(<listcomp>)
   374397   16.966    0.000  105.116    0.000 NeuralNetworks_ADV.py:56(find_delta)
        1    0.555    0.555  446.341  446.341 NeuralNetworks_ADV.py:64(train)
        1    0.496    0.496    1.543    1.543 NeuralNetworks_ADV.py:67(<listcomp>)
        1    0.000    0.000    0.000    0.000 NeuralNetworks_ADV.py:96(<listcomp>)
        8    0.000    0.000    0.000    0.000 _internal.py:827(npy_ctypes_check)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
       12    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        6    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        6    0.000    0.000    0.000    0.000 abc.py:137(__instancecheck__)
        6    0.000    0.000    0.000    0.000 contextlib.py:58(_recreate_cm)
        6    0.000    0.000    0.000    0.000 contextlib.py:71(inner)
  6239950    1.128    0.000    1.128    0.000 einsumfunc.py:989(_einsum_dispatcher)
  1247990    0.757    0.000   97.544    0.000 einsumfunc.py:997(einsum)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2876(_prod_dispatcher)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2881(prod)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        6    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        6    0.000    0.000    0.000    0.000 random.py:681(getrandbits)
        6    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        1    0.000    0.000  446.359  446.359 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
   249601    0.038    0.000    0.038    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        6    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        6    0.000    0.000    0.000    0.000 {built-in method nt.urandom}
   249604    1.015    0.000    1.016    0.000 {built-in method numpy.array}
  1247990   96.787    0.000   96.787    0.000 {built-in method numpy.core._multiarray_umath.c_einsum}
  1247997    3.867    0.000  102.539    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
       24    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       12    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        2    0.000    0.000    0.000    0.000 {built-in method time.time}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.004    0.004    0.005    0.005 {method 'choice' of 'numpy.random.mtrand.RandomState' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   249600    0.191    0.000    0.191    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        6    0.010    0.002    0.010    0.002 {method 'standard_normal' of 'numpy.random._generator.Generator' objects}
        6    0.000    0.000    0.001    0.000 {numpy.random._generator.default_rng}


>>>
